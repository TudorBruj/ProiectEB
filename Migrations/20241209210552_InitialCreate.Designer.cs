// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProiectEB.Data;

#nullable disable

namespace ProiectEB.Migrations
{
    [DbContext(typeof(ProiectEBContext))]
    [Migration("20241209210552_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProiectEB.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresa")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumarTelefon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Prenume")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("ProiectEB.Models.Comanda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataComenzii")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPlatit")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Comanda");
                });

            modelBuilder.Entity("ProiectEB.Models.Produs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantitate")
                        .HasColumnType("int");

                    b.Property<string>("Descriere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pret")
                        .HasColumnType("decimal(6, 2)");

                    b.HasKey("Id");

                    b.ToTable("Produs");
                });

            modelBuilder.Entity("ProiectEB.Models.Recenzie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Comentariu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Evaluare")
                        .HasColumnType("int");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdProdus")
                        .HasColumnType("int");

                    b.Property<int?>("ProdusId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClientId");

                    b.HasIndex("ProdusId");

                    b.ToTable("Recenzie");
                });

            modelBuilder.Entity("ProiectEB.Models.Stoc", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Cantitate")
                        .HasColumnType("int");

                    b.Property<int>("IdProdus")
                        .HasColumnType("int");

                    b.Property<string>("LocatieDepozit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProdusId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProdusId");

                    b.ToTable("Stoc");
                });

            modelBuilder.Entity("ProiectEB.Models.Comanda", b =>
                {
                    b.HasOne("ProiectEB.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("ProiectEB.Models.Recenzie", b =>
                {
                    b.HasOne("ProiectEB.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("ProiectEB.Models.Produs", "Produs")
                        .WithMany()
                        .HasForeignKey("ProdusId");

                    b.Navigation("Client");

                    b.Navigation("Produs");
                });

            modelBuilder.Entity("ProiectEB.Models.Stoc", b =>
                {
                    b.HasOne("ProiectEB.Models.Produs", "Produs")
                        .WithMany()
                        .HasForeignKey("ProdusId");

                    b.Navigation("Produs");
                });
#pragma warning restore 612, 618
        }
    }
}
